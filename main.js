!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_inactive",inputErrorClass:"modal__input-error",errorClass:"modal__error",inputErrorTypeClass:"modal__input-error_type"},t=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorTypeClass),o.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=e=>{document.querySelectorAll(e.formSelector).forEach((n=>{((e,n)=>{const a=Array.from(e.querySelectorAll(n.inputSelector)),s=e.querySelector(n.submitButtonSelector);r(a,s,n),e.addEventListener("reset",(()=>{o(s,n)})),a.forEach((o=>{o.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorTypeClass),n.textContent=r})(e,r,r.validationMessage,o)})(e,o,n),r(a,s,n)}))}))})(n,e)}))};function a(e,t,r="Save",o="Saving..."){e.textContent=t?o:r}n(e),document.querySelectorAll(".modal__form"),document.querySelectorAll(".modal__input");const s=document.querySelector(".profile__edit-button"),c=document.querySelector("#edit-modal"),l=(document.querySelector(".modal__close-button"),c.querySelector(".modal__form")),i=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),u=document.querySelector("#profile-name-input"),m=document.querySelector("#profile-description-input"),_=document.querySelector("#edit-avatar-modal"),h=document.querySelector(".profile__avatar_edit-button "),f=_.querySelector(".modal__form"),p=_.querySelector("#avatar-image-link-input"),y=(_.querySelector(".modal__save-button"),document.querySelector(".profile__avatar")),v=document.querySelector("#delete-modal"),S=v.querySelector(".modal__form"),b=(v.querySelector(".modal__delete-button"),v.querySelector(".modal__cancel-button")),q=document.querySelector("#card-template"),k=document.querySelector(".cards__list"),E=document.querySelector("#preview-modal"),L=E.querySelector(".modal__image"),C=E.querySelector(".modal__image-caption"),g=document.querySelector(".profile__add-button"),U=document.querySelector("#post-modal"),x=U.querySelector(".modal__form"),$=(U.querySelector(".modal__close-button"),U.querySelector("#image-link-input")),A=U.querySelector("#image-caption-input"),I=document.querySelectorAll(".modal__close-button"),P=(U.querySelector(".modal__save-button"),document.querySelector(".profile__edit-button"),document.querySelector(".profile__add-button"),new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}addNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}handleLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}updateProfilePicture({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"e4071923-f260-4276-b71a-355251644adf","Content-Type":"application/json"}}));function T(e,t="prepend"){const r=function(e){const t=q.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__text"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-button_liked"),a.addEventListener("click",(()=>function(e,t){R=e,N=t,w(v)}(t,e._id))),n.addEventListener("click",(t=>{!function(e,t){let r=e.target.classList.contains("card__like-button_liked");P.handleLikeStatus(t,r).then((()=>{e.target.classList.toggle("card__like-button_liked")})).catch(console.error)}(t,e._id)})),o.addEventListener("click",(()=>{w(E),L.src=e.link,L.alt=e.name,C.textContent=e.name})),t}(e);k[t](r)}function D(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",B),e.removeEventListener("mousedown",O)}function w(e){e.classList.add("modal_opened"),document.addEventListener("keydown",B),e.addEventListener("mousedown",O)}let R,N;function B(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&D(e)}}function O(e){e.target.classList.contains("modal_opened")&&D(e.target)}P.getAppInfo().then((([e,t])=>{console.log("Initial card data:",e),P._userId=t._id,y.src=t.avatar,i.textContent=t.name,d.textContent=t.about,e.forEach((e=>{T(e)}))})).catch((e=>{console.error(e)})),I.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>D(t)))})),s.addEventListener("click",(()=>{var r,o;u.value=i.textContent,m.value=d.textContent,r=l,o=e,[u,m].forEach((e=>{t(r,e,o)})),w(c)})),b.addEventListener("click",(()=>{D(v)})),h.addEventListener("click",(()=>{w(_)})),g.addEventListener("click",(()=>{w(U)})),l.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0),P.editUserInfo({name:u.value,about:m.value}).then((e=>{i.textContent=e.name,d.textContent=e.about,D(c)})).catch(console.error).finally((()=>{a(t,!1)}))})),x.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0);const r={name:A.value,link:$.value};P.addNewCard(r).then((t=>{T(t),e.target.reset(),D(U)})).catch(console.error).finally((()=>{a(t,!1)}))})),f.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0),P.updateProfilePicture({avatar:p.value}).then((e=>{y.src=e.avatar,D(_)})).catch(console.error).finally((()=>{a(t,!1)}))})),S.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,"Delete","Deleting..."),P.deleteCard(N).then((()=>{R.remove(),D(v)})).catch(console.error).finally((()=>{a(t,!1,"Delete")}))})),n(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,